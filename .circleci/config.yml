version: 2.1
orbs:
  go: gotest/tools@0.0.14

executors:
  golang:
    docker:
      - image: cimg/go:1.19.7
    resource_class: 2xlarge
  ubuntu:
    docker:
      - image: ubuntu:20.04

commands:
  install-deps:
    steps:
      - go/install-ssh
      - go/install: {package: git}
  prepare:
    parameters:
      linux:
        default: true
        description: is a linux build environment?
        type: boolean
      darwin:
        default: false
        description: is a darwin build environment?
        type: boolean
    steps:
      - checkout
      - git_fetch_all_tags
      - checkout
      - when:
          condition: << parameters.linux >>
          steps:
            - run: sudo apt-get update
            - run: sudo apt-get install ocl-icd-opencl-dev libhwloc-dev
      - run: git submodule sync
      - run: git submodule update --init
  download-params:
    steps:
      - restore_cache:
          name: Restore parameters cache
          keys:
            - 'v25-8mb-lotus-params'
          paths:
            - /var/tmp/filecoin-proof-parameters/
      - run:  ./boostci fetch-params 8388608
      - save_cache:
          name: Save parameters cache
          key: 'v25-8mb-lotus-params'
          paths:
            - /var/tmp/filecoin-proof-parameters/
  git_fetch_all_tags:
    steps:
      - run:
          name: fetch all tags
          command: |
            git fetch --all

jobs:
  mod-tidy-check:
    executor: golang
    steps:
      - install-deps
      - prepare
      - go/mod-tidy-check

  build-all:
    executor: golang
    steps:
      - install-deps
      - prepare
      - run: sudo apt-get update
      - run: sudo apt-get install npm
      - run:
          command: make build-go
      - store_artifacts:
          path: boost
      - run: mkdir linux && mv boost linux/
      - persist_to_workspace:
          root: "."
          paths:
            - linux

  lid-docker-compose:
    description: 'Run LID integration tests'
    machine:
      image: ubuntu-2004:202104-01
      resource_class: xlarge
    steps:
      - checkout
      - run:
          name: local index directory docker compose tests
          command: |
            set -x
            make test-lid

  test:
    description: |
      Run go tests
    parameters: &test-params
      executor:
        type: executor
        default: golang
      go-test-flags:
        type: string
        default: "-v --tags=debug -timeout 15m"
        description: Flags passed to go test.
      target:
        type: string
        default: "./..."
        description: Import paths of packages to be tested.
      cwd:
        type: string
        default: "."
        description: Directory in which to run the test command
      suite:
        type: string
        default: unit
        description: Test suite name to report to CircleCI.
    executor: << parameters.executor >>
    steps:
      - install-deps
      - prepare
      - run:
          command: make boostci
          no_output_timeout: 30m
      - download-params
      # Note: setup_remote_docker takes about 10s and it's only needed for
      # local index directory tests so it may be worth refactoring so that it's
      # only included for local index directory
      - setup_remote_docker:
          version: 20.10.18
          docker_layer_caching: true
      - run:
          name: go test
          command: |
            cd << parameters.cwd >>
            go test \
              << parameters.go-test-flags >> \
              << parameters.target >>
          no_output_timeout: 30m

  build-macos:
    description: build darwin boost binary
    macos:
      xcode: "12.5.1"
    working_directory: ~/go/src/github.com/filecoin-project/boost
    resource_class: macos.x86.medium.gen2
    steps:
      - prepare:
          linux: false
          darwin: true
      - run:
          name: Install go
          command: |
            curl -O https://dl.google.com/go/go1.19.5.darwin-amd64.pkg && \
            sudo installer -pkg go1.19.5.darwin-amd64.pkg -target /
      - run:
          name: Install pkg-config
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew install pkg-config
      - run: go version
      - run:
          name: Install Rust
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run:
          name: Install hwloc
          command: |
            mkdir ~/hwloc
            curl --location https://download.open-mpi.org/release/hwloc/v2.4/hwloc-2.4.1.tar.gz --output ~/hwloc/hwloc-2.4.1.tar.gz
            cd ~/hwloc
            tar -xvzpf hwloc-2.4.1.tar.gz
            cd hwloc-2.4.1
            ./configure && make && sudo make install
      - restore_cache:
          name: restore cargo cache
          key: v3-go-deps-{{ arch }}-{{ checksum "~/go/src/github.com/filecoin-project/boost/go.sum" }}
      - install-deps
      - run:
          command: make debug
          no_output_timeout: 30m
      - run:
          name: check tag and version output match
          command: ./scripts/version-check.sh ./boost
      - store_artifacts:
          path: boost
      - run: mkdir darwin && mv boost darwin/
      - persist_to_workspace:
          root: "."
          paths:
            - darwin
      - save_cache:
          name: save cargo cache
          key: v3-go-deps-{{ arch }}-{{ checksum "~/go/src/github.com/filecoin-project/boost/go.sum" }}
          paths:
            - "~/.rustup"
            - "~/.cargo"

  gofmt:
    executor: golang
    steps:
      - install-deps
      - prepare
      - run:
          command: "! go fmt ./... 2>&1 | read"

  cbor-check:
    executor: golang
    steps:
      - install-deps
      - prepare
      - run: go install golang.org/x/tools/cmd/goimports
      - run: go install github.com/hannahhoward/cbor-gen-for
      - run: make cbor-gen
      - run: git --no-pager diff
      - run: git --no-pager diff --quiet

  gen-check:
    executor: golang
    steps:
      - install-deps
      - prepare
      - run: make deps
      - run: go install golang.org/x/tools/cmd/goimports
      - run: go install github.com/hannahhoward/cbor-gen-for
      - run: make gen
      - run: git --no-pager diff
      - run: git --no-pager diff --quiet
      - run: make docsgen
      - run: git --no-pager diff
      - run: git --no-pager diff --quiet

  docs-check:
    executor: golang
    steps:
      - install-deps
      - prepare
      - run: go install golang.org/x/tools/cmd/goimports
      - run: zcat build/openrpc/boost.json.gz | jq > ../pre-openrpc-boost
      - run: make deps
      - run: make docsgen
      - run: zcat build/openrpc/boost.json.gz | jq > ../post-openrpc-boost
      - run: git --no-pager diff
      - run: diff ../pre-openrpc-boost ../post-openrpc-boost
      - run: git --no-pager diff --quiet

  lint: &lint
    description: |
      Run golangci-lint.
    parameters:
      executor:
        type: executor
        default: golang
      golangci-lint-version:
        type: string
        default: 1.52.2
      concurrency:
        type: string
        default: '2'
        description: |
          Concurrency used to run linters. Defaults to 2 because NumCPU is not
          aware of container CPU limits.
      args:
        type: string
        default: ''
        description: |
          Arguments to pass to golangci-lint
    executor: << parameters.executor >>
    steps:
      - install-deps
      - prepare
      - run:
          command: make debug deps
          no_output_timeout: 30m
      - go/install-golangci-lint:
          gobin: $HOME/.local/bin
          version: << parameters.golangci-lint-version >>
      - run:
          name: Lint
          command: |
            $HOME/.local/bin/golangci-lint run -v --timeout 2m \
              --concurrency << parameters.concurrency >> << parameters.args >>
  lint-all:
    <<: *lint

workflows:
  version: 2.1
  ci:
    jobs:
      - lint-all:
          concurrency: "16"   # expend all docker 2xlarge CPUs.
      - mod-tidy-check
      - gofmt
      - cbor-check
      - gen-check
      - docs-check
      - build-all:
          filters:
            tags:
              only:
                - /^v\d+\.\d+\.\d+(-rc\d+)?$/
      - build-macos:
          filters:
            branches:
              only:
                - /ci\/.*/
            tags:
              only:
                - /^v\d+\.\d+\.\d+(-rc\d+)?$/

      - test:
          name: test-itest-dummydeal_offline
          suite: itest-dummydeal_offline
          target: "./itests/dummydeal_offline_test.go"

      - test:
          name: test-itest-dummydeal
          suite: itest-dummydeal
          target: "./itests/dummydeal_test.go"

      - test:
          name: test-itest-markets_v1_deal
          suite: itest-markets_v1_deal
          target: "./itests/markets_v1_deal_test.go"

      - test:
          name: test-itest-markets_v1_offline_deal
          suite: itest-markets_v1_offline_deal
          target: "./itests/markets_v1_offline_deal_test.go"

      - test:
          name: test-itest-disabled_markets_v1_deal
          suite: itest-disabled_markets_v1_deal
          target: "./itests/disabled_markets_v1_deal_test.go"

      - test:
          name: test-all
          suite: all
          target: "`go list ./... | grep -v boost/itests | grep -v cmd/booster-http | grep -v cmd/booster-bitswap`"

      - test:
          name: test-itest-ipni
          suite: itest-ipni
          target: "./itests/ipni_publish_test.go"

      - test:
          name: test-itest-multiminer-graphsync
          suite: itest-multiminer-graphsync
          target: "./itests/multiminer_retrieval_graphsync_test.go"

      - test:
          name: test-booster-http
          suite: booster-http
          target: "./cmd/booster-http"

      - test:
          name: test-booster-bitswap
          suite: booster-bitswap
          target: "./cmd/booster-bitswap"

      - lid-docker-compose

